"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[90],{2622:function(e,s,t){t.d(s,{$Bv:function(){return id},$Sz:function(){return a5},DcG:function(){return ip},ENH:function(){return ih},En$:function(){return il},Hqk:function(){return ia},IFL:function(){return ix},K2m:function(){return im},Kf0:function(){return a9},LdW:function(){return iu},OjJ:function(){return a8},S2d:function(){return ig},U$$:function(){return ic},Zn:function(){return i_},hY6:function(){return iw},hZO:function(){return ie},lbf:function(){return is},o$X:function(){return a7},t78:function(){return ii},tLj:function(){return ir},wiU:function(){return io},z6E:function(){return it}});var n=t(3675),a=t(9346),i=t(5261),o=t(7082),r=t(4e3),l=t(1328),c=t(9324);let{InferenceSession:d,Tensor:_,env:u}=l.ONNX,h={EncoderOnly:0,EncoderDecoder:1,Seq2Seq:2,Vision2Seq:3,DecoderOnly:4,MaskGeneration:5},m=new Map,p=new Map,f=new Map;async function g(e,s,t){let n=`onnx/${s}${t.quantized?"_quantized":""}.onnx`,a=await (0,i.st)(e,n,!0,t);try{return await d.create(a,{executionProviders:l.p})}catch(e){if(1===l.p.length&&"wasm"===l.p[0])throw e;return console.warn(e),console.warn("Something went wrong during model construction (most likely a missing operation). Using `wasm` as a fallback. "),await d.create(a,{executionProviders:["wasm"]})}}async function w(e,s){let t=function(e,s){let t=Object.create(null),n=[];for(let a of e.inputNames){let e=s[a];if(!(e instanceof r.es)){n.push(a);continue}t[a]=u.wasm.proxy?e.clone():e}if(n.length>0)throw Error(`An error occurred during model execution: "Missing the following inputs: ${n.join(", ")}.`);let a=Object.keys(s).length,i=e.inputNames.length;if(a>i){let t=Object.keys(s).filter(s=>!e.inputNames.includes(s));console.warn(`WARNING: Too many inputs were provided (${a} > ${i}). The following inputs will be ignored: "${t.join(", ")}".`)}return t}(e,s);try{let s=await e.run(t);return s=function e(s){for(let t in s)s[t]instanceof _?s[t]=new r.es(s[t]):"object"==typeof s[t]&&e(s[t]);return s}(s)}catch(e){throw console.error(`An error occurred during model execution: "${e}".`),console.error("Inputs given to model:",t),e}}function x(e,s){let t=e.config.pad_token_id??null,n=e.config.eos_token_id??null;(0,a.Wy)(n)&&(n=[n]);let i=-1!==s.indexOf(t),o=null===n||!n.includes(t);if(!i||!o)return(0,r.r6)(s);{let e=BigInt64Array.from(s.data.map(e=>e!=t));return new r.es("int64",e,s.dims)}}function y(e,s,t){if(!e.inputNames.includes("position_ids"))return;let n=new BigInt64Array(s.attention_mask.data.length);for(let e=0;e<s.attention_mask.dims[0];++e){let t=e*s.attention_mask.dims[1],a=BigInt(0);for(let e=0;e<s.attention_mask.dims[1];++e){let i=t+e;0n===s.attention_mask.data[i]?n[i]=BigInt(1):(n[i]=a,a+=s.attention_mask.data[i])}}s.position_ids=new r.es("int64",n,s.attention_mask.dims),t&&(s.position_ids=s.position_ids.slice(null,-1).unsqueeze_(-1))}function M(e){return new r.es("bool",[e],[1])}async function k(e,s){let{encoder_outputs:t,past_key_values:n}=s;t||(t=(await F(e,s)).last_hidden_state);let a={input_ids:s.decoder_input_ids,encoder_hidden_states:t},i=!!n;e.decoder_merged_session.inputNames.includes("use_cache_branch")&&(a.use_cache_branch=M(i)),e.decoder_merged_session.inputNames.includes("encoder_attention_mask")&&(a.encoder_attention_mask=s.attention_mask),y(e.decoder_merged_session,a,i),e.addPastKeyValues(a,n);let o=await w(e.decoder_merged_session,a);return new iy({logits:o.logits,past_key_values:n=e.getPastKeyValues(o,n),encoder_outputs:t,...e.getAttentions(o)})}function b(e,s,t,n){let a=[],i=0,o=e.requires_attention_mask??!0,l=t.decoder_input_ids??t.decoder_start_token_id??t.bos_token_id??t.eos_token_id;for(let t of(l instanceof r.es?l=l.tolist().flat():Array.isArray(l)||(l=[l]),s)){t.dims=[1,...t.dims];let s={inputs:t,encoder_outputs:null,prev_model_outputs:null,output_token_ids:l,done:!1,score:0,id:i++};o&&(s.attention_mask=x(e,t)),a.push(s)}return a}async function v(e,s){let t=e.main_input_name,n=s.output_token_ids;s.prev_model_outputs&&(n=n.slice(-1));let a={[t]:s.inputs,decoder_input_ids:function(e){if(e instanceof r.es)return e;if(0===e.length)throw Error("items must be non-empty");if(!Array.isArray(e[0]))return new r.es("int64",BigInt64Array.from(e.map(e=>BigInt(e))),[1,e.length]);if(e.some(s=>s.length!==e[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new r.es("int64",BigInt64Array.from(e.flat().map(e=>BigInt(e))),[e.length,e[0].length])}(n),encoder_outputs:s.encoder_outputs,past_key_values:s.prev_model_outputs?.past_key_values};s.attention_mask&&(a.attention_mask=s.attention_mask);let i=await e.forward(a);return s.prev_model_outputs=i,s.encoder_outputs=i.encoder_outputs,i}function S(e,s){e.output_token_ids=[...e.output_token_ids,s]}async function F(e,s){let t=Object.create(null);for(let n of e.session.inputNames)t[n]=s[n];return e.session.inputNames.includes("token_type_ids")&&!t.token_type_ids&&(t.token_type_ids=new r.es("int64",new BigInt64Array(t.input_ids.data.length),t.input_ids.dims)),await w(e.session,t)}async function C(e,s){let{input_ids:t,past_key_values:n,attention_mask:a}=s,i={input_ids:t,attention_mask:a??x(e,t)},o=!!n;e.session.inputNames.includes("use_cache_branch")&&(i.use_cache_branch=M(o)),y(e.session,i,o),e.addPastKeyValues(i,n);let r=await w(e.session,i);return{logits:r.logits,past_key_values:n=e.getPastKeyValues(r,n)}}function L(e,s,t,n,a){let i=[],o=0;for(let t of s){let s,r=t.tolist().map(Number);t.dims=[1,...t.dims],a?(s=a[o]).dims=[1,...s.dims]:s=x(e,t);let l={input:t,model_input_ids:t,attention_mask:s,prev_model_outputs:null,output_token_ids:r,num_output_tokens:n,done:!1,score:0,id:o++};i.push(l)}return i}async function A(e,s){let t=new BigInt64Array(s.output_token_ids.length).fill(1n),n={input_ids:s.model_input_ids,attention_mask:new r.es("int64",t,[1,t.length]),past_key_values:s.prev_model_outputs?.past_key_values},a=await e.forward(n);return s.prev_model_outputs=a,a}function P(e,s){e.output_token_ids=[...e.output_token_ids,s],e.model_input_ids=new r.es("int64",[BigInt(s)],[1,1])}class E extends a.Ag{main_input_name="input_ids";constructor(e,s){super(),this.config=e,this.session=s;let t=f.get(this.constructor),n=m.get(t);this.can_generate=!1,this._runBeam=null,this._getStartBeams=null,this._updateBeam=null,this._forward=null,n===h.DecoderOnly?(this.can_generate=!0,this._runBeam=A,this._getStartBeams=L,this._updateBeam=P,this._forward=C):n===h.Seq2Seq||n===h.Vision2Seq?(this.can_generate=!0,this._runBeam=v,this._getStartBeams=b,this._updateBeam=S,this._forward=k):(h.EncoderDecoder,this._forward=F)}async dispose(){let e=[];for(let s of Object.keys(this)){let t=this[s];t instanceof d&&e.push(t.handler.dispose())}return await Promise.all(e)}static async from_pretrained(e,{quantized:s=!0,progress_callback:t=null,config:a=null,cache_dir:o=null,local_files_only:r=!1,revision:l="main",model_file_name:c=null}={}){let d,_={quantized:s,progress_callback:t,config:a,cache_dir:o,local_files_only:r,revision:l,model_file_name:c},u=f.get(this),p=m.get(u);return p===h.DecoderOnly?d=await Promise.all([n.z.from_pretrained(e,_),g(e,_.model_file_name??"decoder_model_merged",_),(0,i.yM)(e,"generation_config.json",!1,_)]):p===h.Seq2Seq||p===h.Vision2Seq?d=await Promise.all([n.z.from_pretrained(e,_),g(e,"encoder_model",_),g(e,"decoder_model_merged",_),(0,i.yM)(e,"generation_config.json",!1,_)]):p===h.MaskGeneration?d=await Promise.all([n.z.from_pretrained(e,_),g(e,"vision_encoder",_),g(e,"prompt_encoder_mask_decoder",_)]):p===h.EncoderDecoder?d=await Promise.all([n.z.from_pretrained(e,_),g(e,"encoder_model",_),g(e,"decoder_model_merged",_)]):(p!==h.EncoderOnly&&console.warn(`Model type for '${u??a?.model_type}' not found, assuming encoder-only architecture. Please report this at https://github.com/xenova/transformers.js/issues/new/choose.`),d=await Promise.all([n.z.from_pretrained(e,_),g(e,_.model_file_name??"model",_)])),new this(...d)}async _call(e){return await this.forward(e)}async forward(e){return await this._forward(this,e)}_get_logits_processor(e,s,t=null){let n=new o.Jm;if(null!==e.repetition_penalty&&1!==e.repetition_penalty&&n.push(new o.Jj(e.repetition_penalty)),null!==e.no_repeat_ngram_size&&e.no_repeat_ngram_size>0&&n.push(new o.jF(e.no_repeat_ngram_size)),null!==e.bad_words_ids&&n.push(new o.AE(e.bad_words_ids,e.eos_token_id)),null!==e.min_length&&null!==e.eos_token_id&&e.min_length>0&&n.push(new o.ez(e.min_length,e.eos_token_id)),null!==e.min_new_tokens&&null!==e.eos_token_id&&e.min_new_tokens>0&&n.push(new o.CJ(s,e.min_new_tokens,e.eos_token_id)),null!==e.forced_bos_token_id&&n.push(new o.C9(e.forced_bos_token_id)),null!==e.forced_eos_token_id&&n.push(new o.dZ(e.max_length,e.forced_eos_token_id)),null!==e.begin_suppress_tokens){let t=s>1||null===e.forced_bos_token_id?s:s+1;null!==e.forced_decoder_ids&&(t+=e.forced_decoder_ids[e.forced_decoder_ids.length-1][0]),n.push(new o.GU(e.begin_suppress_tokens,t))}return null!==e.forced_decoder_ids&&n.push(new o.E(e.forced_decoder_ids)),null!==t&&n.extend(t),n}_get_generation_config(e){let s=new o.aP(this.config);return"generation_config"in this&&Object.assign(s,this.generation_config),null!==e&&Object.assign(s,e),s}async generate(e,s=null,t=null,{inputs_attention_mask:n=null}={}){let i;if(!this.can_generate){let e=f.get(this.constructor),s=`The current model class (${e}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`,t=this.config.model_type,n=aV.get(t)??aG.get(t)??aB.get(t)??a$.get(t);throw n&&(s+=` Please use the following class instead: '${n[0]}'`),Error(s)}if(!(e instanceof r.es)&&!(0,a.fU)(e)&&!Array.isArray(e))throw Error(`\`inputs\` must be a Tensor, TypedArray, or Array, but is "${e.constructor.name}".`);if(this.config.is_encoder_decoder)i=0;else if(0===(i=e instanceof r.es?e.dims.at(-1):e.length))throw Error("Must supply a non-empty array of input token ids.");s=this._get_generation_config(s),t=t??new o.Jm,t=this._get_logits_processor(s,i,t);let l=s.eos_token_id;null===l||Array.isArray(l)||(l=[l]);let c=1,d=1+(s.max_new_tokens??1/0),_=Number.isInteger(s.max_length)&&(s.max_new_tokens??null)===null,u=o.Z4.getSampler(s),h=this.getStartBeams(e,s,c,n);for(;h.some(e=>!e.done)&&c<d;){let e=[];for(let n of h){if(n.done){e.push(n);continue}if(_&&n.output_token_ids.length>=s.max_length){n.done=!0,e.push(n);continue}let a=await this.runBeam(n);s.output_attentions&&this.addAttentionsToBeam(n,a),s.output_scores;let i=a.logits.slice(null,-1,null);for(let[s,a]of(t(n.output_token_ids,i),u(i))){let t={...n};this.updateBeam(t,s),t.score+=a,l&&l.includes(s)&&(t.done=!0),e.push(t)}}++c,h=(e=this.groupBeams(e).map(e=>e.sort((e,s)=>s.score-e.score).slice(0,s.num_beams))).flat(),s.callback_function&&s.callback_function(h)}let m=this.groupBeams(h),p=e=>m.map(t=>s.num_return_sequences>1?t.slice(0,s.num_return_sequences).map(s=>s[e]):[t[0][e]]).flat(),g=p("output_token_ids");return s.return_dict_in_generate?{sequences:g,decoder_attentions:p("decoder_attentions"),cross_attentions:p("cross_attentions")}:g}addAttentionsToBeam(e,s){if(this.config.is_encoder_decoder){if(!s.cross_attentions||0===s.cross_attentions.length)throw Error("`output_attentions` is true, but the model did not produce cross-attentions. This is most likely because the model was not exported with `output_attentions=True`.");e.cross_attentions||(e.cross_attentions=[]),e.cross_attentions.push(s.cross_attentions)}if(!s.decoder_attentions||0===s.decoder_attentions.length)throw Error("`output_attentions` is true, but the model did not produce decoder-attentions. This is most likely because the model was not exported with `output_attentions=True`.");e.decoder_attentions||(e.decoder_attentions=[]),e.decoder_attentions.push(s.decoder_attentions)}groupBeams(e){let s=Object.create(null);for(let t of e)void 0===s[t.id]?s[t.id]=[t]:s[t.id].push(t);return Object.values(s)}getPastKeyValues(e,s){let t=Object.create(null);for(let n in e)if(n.startsWith("present")){let a=n.replace("present","past_key_values");s&&n.includes("encoder")?t[a]=s[a]:t[a]=e[n]}return t}getAttentions(e){let s=Object.create(null);for(let t of["cross_attentions","decoder_attentions"]){let n=[];for(let s in e)s.startsWith(t)&&(n[s.split(".").pop()]=e[s]);s[t]=n}return s}addPastKeyValues(e,s){if(s)Object.assign(e,s);else if(this.config.is_encoder_decoder&&(this.add_encoder_pkv??!0)){let s=[1,this.num_encoder_heads,0,this.encoder_dim_kv],t=[1,this.num_decoder_heads,0,this.decoder_dim_kv];for(let n=0;n<this.num_decoder_layers;++n)e[`past_key_values.${n}.encoder.key`]=new r.es("float32",[],s),e[`past_key_values.${n}.encoder.value`]=new r.es("float32",[],s),e[`past_key_values.${n}.decoder.key`]=new r.es("float32",[],t),e[`past_key_values.${n}.decoder.value`]=new r.es("float32",[],t)}else if("falcon"===this.config.model_type){let s=[1*this.num_heads,0,this.dim_kv];for(let t=0;t<this.num_layers;++t)e[`past_key_values.${t}.key`]=new r.es("float32",[],s),e[`past_key_values.${t}.value`]=new r.es("float32",[],s)}else if(this.config.multi_query){let s=[1*this.num_heads,0,2*this.dim_kv];for(let t=0;t<this.num_layers;++t)e[`past_key_values.${t}.key_value`]=new r.es("float32",[],s)}else if("bloom"===this.config.model_type){let s=[1*this.num_heads,this.dim_kv,0],t=[1*this.num_heads,0,this.dim_kv];for(let n=0;n<this.num_layers;++n)e[`past_key_values.${n}.key`]=new r.es("float32",[],s),e[`past_key_values.${n}.value`]=new r.es("float32",[],t)}else{let s=[1,this.num_heads,0,this.dim_kv];for(let t=0;t<this.num_layers;++t)e[`past_key_values.${t}.key`]=new r.es("float32",[],s),e[`past_key_values.${t}.value`]=new r.es("float32",[],s)}}getStartBeams(e,s,t,n){return this._getStartBeams(this,e,s,t,n)}async runBeam(e){return await this._runBeam(this,e)}updateBeam(e,s){return this._updateBeam(e,s)}}class T{}class O extends E{}class B extends O{}class D extends O{async _call(e){return new iv(await super._call(e))}}class I extends O{async _call(e){return new iM(await super._call(e))}}class q extends O{async _call(e){return new ib(await super._call(e))}}class N extends O{async _call(e){return new iS(await super._call(e))}}class G extends E{}class V extends G{}class z extends E{}class j extends z{}class $ extends z{async _call(e){return new iv(await super._call(e))}}class W extends z{async _call(e){return new iM(await super._call(e))}}class R extends z{async _call(e){return new ib(await super._call(e))}}class Q extends z{async _call(e){return new iS(await super._call(e))}}class U extends E{}class X extends U{}class K extends U{async _call(e){return new iv(await super._call(e))}}class H extends U{async _call(e){return new iM(await super._call(e))}}class J extends U{async _call(e){return new ib(await super._call(e))}}class Z extends U{async _call(e){return new iS(await super._call(e))}}class Y extends E{}class ee extends Y{}class es extends Y{async _call(e){return new iv(await super._call(e))}}class et extends Y{async _call(e){return new iM(await super._call(e))}}class en extends Y{async _call(e){return new ib(await super._call(e))}}class ea extends Y{async _call(e){return new iS(await super._call(e))}}class ei extends E{}class eo extends ei{}class er extends ei{async _call(e){return new iv(await super._call(e))}}class el extends ei{async _call(e){return new iM(await super._call(e))}}class ec extends ei{async _call(e){return new ib(await super._call(e))}}class ed extends ei{async _call(e){return new iS(await super._call(e))}}class e_ extends E{}class eu extends e_{}class eh extends e_{async _call(e){return new iv(await super._call(e))}}class em extends e_{async _call(e){return new iM(await super._call(e))}}class ep extends e_{async _call(e){return new ib(await super._call(e))}}class ef extends e_{async _call(e){return new iS(await super._call(e))}}class eg extends E{}class ew extends eg{}class ex extends eg{async _call(e){return new iv(await super._call(e))}}class ey extends eg{async _call(e){return new iM(await super._call(e))}}class eM extends eg{async _call(e){return new ib(await super._call(e))}}class ek extends eg{async _call(e){return new iS(await super._call(e))}}class eb extends E{}class ev extends eb{}class eS extends eb{async _call(e){return new iM(await super._call(e))}}class eF extends eb{async _call(e){return new ib(await super._call(e))}}class eC extends eb{async _call(e){return new iS(await super._call(e))}}class eL extends eb{async _call(e){return new iv(await super._call(e))}}class eA extends E{}class eP extends eA{}class eE extends eA{async _call(e){return new iv(await super._call(e))}}class eT extends eA{async _call(e){return new iM(await super._call(e))}}class eO extends eA{async _call(e){return new ib(await super._call(e))}}class eB extends E{}class eD extends eB{}class eI extends eB{async _call(e){return new iv(await super._call(e))}}class eq extends eB{async _call(e){return new iM(await super._call(e))}}class eN extends eB{async _call(e){return new iS(await super._call(e))}}class eG extends E{}class eV extends eG{}class ez extends eG{async _call(e){return new iv(await super._call(e))}}class ej extends eG{async _call(e){return new iM(await super._call(e))}}class e$ extends eG{async _call(e){return new ib(await super._call(e))}}class eW extends eG{async _call(e){return new iS(await super._call(e))}}class eR extends E{}class eQ extends eR{}class eU extends eR{async _call(e){return new iv(await super._call(e))}}class eX extends eR{async _call(e){return new iM(await super._call(e))}}class eK extends eR{async _call(e){return new iS(await super._call(e))}}class eH extends E{}class eJ extends eH{}class eZ extends eH{async _call(e){return new iM(await super._call(e))}}class eY extends eH{async _call(e){return new iS(await super._call(e))}}class e2 extends eH{async _call(e){return new iv(await super._call(e))}}class e0 extends E{}class e1 extends e0{}class e3 extends e0{constructor(e,s,t,n){super(e,s),this.decoder_merged_session=t,this.generation_config=n,this.num_decoder_layers=this.config.num_decoder_layers,this.num_decoder_heads=this.config.num_heads,this.decoder_dim_kv=this.config.d_kv,this.num_encoder_layers=this.config.num_layers,this.num_encoder_heads=this.config.num_heads,this.encoder_dim_kv=this.config.d_kv}}class e4 extends E{}class e6 extends e4{}class e5 extends e4{constructor(e,s,t,n){super(e,s),this.decoder_merged_session=t,this.generation_config=n,this.num_decoder_layers=this.config.num_decoder_layers,this.num_decoder_heads=this.config.num_heads,this.decoder_dim_kv=this.config.d_kv,this.num_encoder_layers=this.config.num_layers,this.num_encoder_heads=this.config.num_heads,this.encoder_dim_kv=this.config.d_kv}}class e7 extends E{}class e8 extends e7{}class e9 extends e7{constructor(e,s,t,n){super(e,s),this.decoder_merged_session=t,this.generation_config=n,this.num_decoder_layers=this.config.num_decoder_layers,this.num_decoder_heads=this.config.num_heads,this.decoder_dim_kv=this.config.d_kv,this.num_encoder_layers=this.config.num_layers,this.num_encoder_heads=this.config.num_heads,this.encoder_dim_kv=this.config.d_kv}}class se extends E{}class ss extends se{}class st extends se{constructor(e,s,t,n){super(e,s),this.decoder_merged_session=t,this.generation_config=n,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}}class sn extends se{async _call(e){return new iM(await super._call(e))}}class sa extends E{}class si extends sa{}class so extends sa{constructor(e,s,t,n){super(e,s),this.decoder_merged_session=t,this.generation_config=n,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}}class sr extends sa{async _call(e){return new iM(await super._call(e))}}class sl extends sa{constructor(e,s,t){super(e,s),this.generation_config=t,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}}class sc extends E{}class sd extends sc{}class s_ extends sc{constructor(e,s,t,n){super(e,s),this.decoder_merged_session=t,this.generation_config=n,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}}class su extends E{}class sh extends su{}class sm extends su{constructor(e,s,t,n){super(e,s),this.decoder_merged_session=t,this.generation_config=n,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}}class sp extends E{}class sf extends sp{}class sg extends sp{async _call(e){return new iv(await super._call(e))}}class sw extends sp{async _call(e){return new iM(await super._call(e))}}class sx extends sp{async _call(e){return new ib(await super._call(e))}}class sy extends sp{async _call(e){return new iS(await super._call(e))}}class sM extends E{}class sk extends sM{}class sb extends sM{async _call(e){return new iv(await super._call(e))}}class sv extends sM{async _call(e){return new iM(await super._call(e))}}class sS extends sM{async _call(e){return new ib(await super._call(e))}}class sF extends sM{async _call(e){return new iS(await super._call(e))}}class sC extends E{}class sL extends sC{}class sA extends sC{async _call(e){return new iv(await super._call(e))}}class sP extends sC{async _call(e){return new iM(await super._call(e))}}class sE extends sC{async _call(e){return new ib(await super._call(e))}}class sT extends sC{async _call(e){return new iS(await super._call(e))}}class sO extends E{}class sB extends sO{}class sD extends sO{}class sI extends E{}class sq extends sI{}class sN extends sI{requires_attention_mask=!1;main_input_name="input_features";constructor(e,s,t,n){super(e,s),this.decoder_merged_session=t,this.generation_config=n,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}async generate(e,s=null,t=null){if(s=this._get_generation_config(s),s.return_timestamps??=!1,s.return_timestamps&&(t=[new o.Pg(s)]),s.return_token_timestamps&&(s.output_attentions=!0,s.return_dict_in_generate=!0,"translate"===s.task&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),!s.alignment_heads))throw Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");let n=await super.generate(e,s,t);return s.return_token_timestamps&&s.alignment_heads&&(n.token_timestamps=this._extract_token_timestamps(n,s.alignment_heads,s.num_frames)),n}_extract_token_timestamps(e,s,t=null,n=.02){if(!e.cross_attentions)throw Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");let i=this.config.median_filter_width;void 0===i&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),i=7);let o=e.cross_attentions.map(e=>{let n=Array.from({length:this.config.decoder_layers},(s,t)=>(0,r.d3)(e.map(e=>e[t]),2)),a=(0,r.kn)(s.map(([e,s])=>t?n[e].slice(null,s,null,[0,t]):n[e].slice(null,s)));a=a.transpose(1,0,2,3);let[o,l]=(0,r.f3)(a,-2,0,!0),d=a.clone();for(let e=0;e<d.dims[0];++e){let s=d[e];for(let t=0;t<s.dims[0];++t){let n=s[t],a=o[e][t][0],r=l[e][t][0];for(let e=0;e<n.dims[0];++e){let s=n[e];for(let e=0;e<s.data.length;++e)s.data[e]=(s.data[e]-r.data[e])/a.data[e];s.data.set((0,c.qCb)(s.data,i))}}}return(0,r.J6)(d,1)}),l=[e.sequences.length,e.sequences[0].length],d=new r.es("float32",new Float32Array(l[0]*l[1]),l);for(let e=0;e<l[0];++e){let s=o[e].neg().squeeze_(0),[t,i]=(0,r.Ks)(s),l=Array.from({length:t.length-1},(e,s)=>t[s+1]-t[s]),c=(0,a.eG)([1],l).map(e=>!!e),_=[];for(let e=0;e<c.length;++e)c[e]&&_.push(i[e]*n);d[e].data.set(_,1)}return d}}class sG extends E{main_input_name="pixel_values";constructor(e,s,t,n){super(e,s),this.decoder_merged_session=t,this.generation_config=n;let a=this.config.encoder,i=this.config.decoder,o=a.model_type;(aE.get(o)??aT.get(o))||console.warn(`Model type for encoder '${o}' not found, assuming encoder-only architecture. Please report this at https://github.com/xenova/transformers.js/issues/new/choose.`);let r=aV.get(i.model_type);if(!r)throw Error(`Unable to construct \`VisionEncoderDecoder\` due to unsupported decoder: "${this.config.decoder.model_type}"`);let l=new r[1](i,t,n);this.add_encoder_pkv="num_decoder_layers"in l,this.add_encoder_pkv?(this.num_decoder_layers=l.num_decoder_layers,this.num_decoder_heads=l.num_decoder_heads,this.decoder_dim_kv=l.decoder_dim_kv,this.num_encoder_layers=l.num_encoder_layers,this.num_encoder_heads=l.num_encoder_heads,this.encoder_dim_kv=l.encoder_dim_kv):(this.num_layers=l.num_layers,this.num_heads=l.num_heads,this.dim_kv=l.dim_kv)}}class sV extends E{}class sz extends sV{}class sj extends sV{static async from_pretrained(e,s={}){return s.model_file_name??="text_model",super.from_pretrained(e,s)}}class s$ extends sV{static async from_pretrained(e,s={}){return s.model_file_name??="vision_model",super.from_pretrained(e,s)}}class sW extends E{}class sR extends sW{}class sQ extends sW{static async from_pretrained(e,s={}){return s.model_file_name??="text_model",super.from_pretrained(e,s)}}class sU extends sV{static async from_pretrained(e,s={}){return s.model_file_name??="vision_model",super.from_pretrained(e,s)}}class sX extends E{}class sK extends sX{}class sH extends E{}class sJ extends sH{}class sZ extends sH{}class sY extends E{constructor(e,s,t){super(e,s),this.generation_config=t,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.n_head,this.num_layers=this.config.n_layer,this.dim_kv=this.config.n_embd/this.num_heads}}class s2 extends sY{}class s0 extends sY{}class s1 extends E{constructor(e,s,t){super(e,s),this.generation_config=t,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_heads,this.num_layers=this.config.num_layers,this.dim_kv=this.config.hidden_size/this.num_heads}}class s3 extends s1{}class s4 extends s1{}class s6 extends E{constructor(e,s,t){super(e,s),this.generation_config=t,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_attention_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.num_heads}}class s5 extends s6{}class s7 extends s6{}class s8 extends E{constructor(e,s,t){super(e,s),this.generation_config=t,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.n_head,this.num_layers=this.config.n_layer,this.dim_kv=this.config.n_embd/this.num_heads}}class s9 extends s8{}class te extends s8{}class ts extends E{constructor(e,s,t){super(e,s),this.generation_config=t,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.n_head,this.num_layers=this.config.n_layer,this.dim_kv=this.config.n_embd/this.num_heads}}class tt extends ts{}class tn extends ts{}class ta extends E{constructor(e,s,t){super(e,s),this.generation_config=t,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.n_head,this.num_layers=this.config.n_layer,this.dim_kv=this.config.n_embd/this.num_heads}}class ti extends ta{}class to extends ta{}class tr extends E{constructor(e,s,t){super(e,s),this.generation_config=t,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_key_value_heads??this.config.num_attention_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.config.num_attention_heads}}class tl extends tr{}class tc extends tr{}class td extends E{constructor(e,s,t){super(e,s),this.generation_config=t,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_key_value_heads??this.config.num_attention_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.config.num_attention_heads}}class t_ extends td{}class tu extends td{}class th extends E{constructor(e,s,t){super(e,s),this.generation_config=t,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_attention_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.num_heads}}class tm extends th{}class tp extends th{}class tf extends E{constructor(e,s,t){super(e,s),this.generation_config=t,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.n_head,this.num_layers=this.config.n_layer,this.dim_kv=this.config.hidden_size/this.num_heads}}class tg extends tf{}class tw extends tf{}class tx extends E{constructor(e,s,t){super(e,s),this.generation_config=t,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.n_heads,this.num_layers=this.config.n_layers,this.dim_kv=this.config.d_model/this.num_heads}}class ty extends tx{}class tM extends tx{}class tk extends E{constructor(e,s,t){super(e,s),this.generation_config=t,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_attention_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.num_heads}}class tb extends tk{}class tv extends tk{}class tS extends E{}class tF extends tS{}class tC extends tS{async _call(e){return new iM(await super._call(e))}}class tL extends E{}class tA extends tL{}class tP extends tL{async _call(e){return new iM(await super._call(e))}}class tE extends E{}class tT extends tE{async _call(e){return new iC(await super._call(e))}}class tO extends E{}class tB extends tO{}class tD extends tO{async _call(e){return new iM(await super._call(e))}}class tI extends E{}class tq extends tI{}class tN extends tI{async _call(e){return new iM(await super._call(e))}}class tG extends E{}class tV extends tG{}class tz extends tG{}class tj extends E{}class t$ extends tj{}class tW extends tj{}class tR extends E{}class tQ extends tR{}class tU extends tR{async _call(e){return new iM(await super._call(e))}}class tX extends E{}class tK extends tX{}class tH extends tX{async _call(e){return new tZ(await super._call(e))}}class tJ extends tX{async _call(e){return new tY(await super._call(e))}}class tZ extends T{constructor({logits:e,pred_boxes:s}){super(),this.logits=e,this.pred_boxes=s}}class tY extends T{constructor({logits:e,pred_boxes:s,pred_masks:t}){super(),this.logits=e,this.pred_boxes=s,this.pred_masks=t}}class t2 extends E{}class t0 extends t2{}class t1 extends t2{async _call(e){return new t3(await super._call(e))}}class t3 extends tZ{}class t4 extends E{}class t6 extends t4{}class t5 extends t4{async _call(e){return new iM(await super._call(e))}}class t7 extends E{}class t8 extends t7{}class t9 extends t7{async _call(e){return new iM(await super._call(e))}}class ne extends E{}class ns extends ne{}class nt extends ne{async _call(e){return new iM(await super._call(e))}}class nn extends E{}class na extends nn{}class ni extends nn{}class no extends E{}class nr extends no{}class nl extends no{}class nc extends E{}class nd extends nc{}class n_ extends E{}class nu extends n_{}class nh extends n_{}class nm extends E{}class np extends nm{}class nf extends E{}class ng extends nf{}class nw extends nf{async _call(e){return new iM(await super._call(e))}}class nx extends E{}class ny extends nx{}class nM extends nx{async _call(e){return new iM(await super._call(e))}}class nk extends E{}class nb extends nk{}class nv extends nk{async _call(e){return new iM(await super._call(e))}}class nS extends E{}class nF extends nS{}class nC extends nS{async _call(e){return new nL(await super._call(e))}}class nL extends T{constructor({logits:e,pred_boxes:s}){super(),this.logits=e,this.pred_boxes=s}}class nA extends E{}class nP extends nA{constructor(e,s,t){super(e,s),this.prompt_encoder_mask_decoder=t}async get_image_embeddings({pixel_values:e}){return await F(this,{pixel_values:e})}async forward(e){if(e.image_embeddings&&e.image_positional_embeddings||(e={...e,...await this.get_image_embeddings(e)}),!e.input_labels){let s=e.input_points.dims.slice(0,-1),t=s.reduce((e,s)=>e*s,1);e.input_labels=new r.es("int64",new BigInt64Array(t).fill(1n),s)}return await w(this.prompt_encoder_mask_decoder,{input_points:e.input_points,input_labels:e.input_labels,image_embeddings:e.image_embeddings,image_positional_embeddings:e.image_positional_embeddings})}async _call(e){return new nE(await super._call(e))}}class nE extends T{constructor({iou_scores:e,pred_masks:s}){super(),this.iou_scores=e,this.pred_masks=s}}class nT extends E{}class nO extends nT{}class nB extends nT{constructor(e,s,t,n){super(e,s),this.decoder_merged_session=t,this.generation_config=n,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}}class nD extends E{}class nI extends nD{}class nq extends nD{constructor(e,s,t,n){super(e,s),this.decoder_merged_session=t,this.generation_config=n,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}}class nN extends E{}class nG extends nN{}class nV extends nN{async _call(e){return new iF(await super._call(e))}}class nz extends nN{async _call(e){return new iM(await super._call(e))}}class nj extends nN{async _call(e){return new ib(await super._call(e))}}class n$ extends E{}class nW extends n${}class nR extends n${async _call(e){return new iF(await super._call(e))}}class nQ extends n${async _call(e){return new iM(await super._call(e))}}class nU extends E{}class nX extends nU{}class nK extends nU{async _call(e){return new iF(await super._call(e))}}class nH extends nU{async _call(e){return new iM(await super._call(e))}}class nJ extends nU{async _call(e){return new ib(await super._call(e))}}class nZ extends E{}class nY extends nZ{}class n2 extends nZ{async _call(e){return new iF(await super._call(e))}}class n0 extends nZ{async _call(e){return new iM(await super._call(e))}}class n1 extends nN{}class n3 extends nN{async _call(e){return new iF(await super._call(e))}}class n4 extends nN{async _call(e){return new iM(await super._call(e))}}class n6 extends E{}class n5 extends n6{}class n7 extends n6{async _call(e){return new iF(await super._call(e))}}class n8 extends n6{async _call(e){return new iM(await super._call(e))}}class n9 extends n6{async _call(e){return new ik(await super._call(e))}}class ae extends n6{async _call(e){return new ib(await super._call(e))}}class as extends E{}class at extends as{}class an extends as{constructor(e,s,t,n){super(e,s),this.decoder_merged_session=t,this.generation_config=n,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.hidden_size/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.hidden_size/this.num_encoder_heads}async generate_speech(e,s,{threshold:t=.5,minlenratio:n=0,maxlenratio:a=20,vocoder:i=null}={}){let{encoder_outputs:o,encoder_attention_mask:l}=await F(this,{input_ids:e}),c=o.dims[1]/this.config.reduction_factor,d=Math.floor(c*a),_=Math.floor(c*n),u=this.config.num_mel_bins,h=[],m=null,p=null,f=0;for(;;){++f;let e={use_cache_branch:M(!!p),output_sequence:p?p.output_sequence_out:new r.es("float32",new Float32Array(u),[1,1,u]),encoder_attention_mask:l,speaker_embeddings:s,encoder_hidden_states:o};this.addPastKeyValues(e,m),p=await w(this.decoder_merged_session,e),m=this.getPastKeyValues(p,m);let{prob:n,spectrum:a}=p;if(h.push(a),f>=_&&(Array.from(n.data).filter(e=>e>=t).length>0||f>=d))break}let g=(0,r.d3)(h),{waveform:x}=await w(i.session,{spectrogram:g});return{spectrogram:g,waveform:x}}}class aa extends E{main_input_name="spectrogram"}class ai extends E{constructor(e,s,t){super(e,s),this.generation_config=t,this.config.pad_token_id=this.config.eos_token_id,this.num_encoder_layers=this.num_decoder_layers=this.config.decoder_layers,this.num_encoder_heads=this.num_decoder_heads=this.config.decoder_attention_heads,this.encoder_dim_kv=this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads}}class ao extends ai{}class ar extends E{constructor(e,s,t){super(e,s),this.generation_config=t,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_key_value_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.config.num_attention_heads}}class al extends ar{}class ac extends ar{}class ad extends E{constructor(e,s,t){super(e,s),this.generation_config=t,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_key_value_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.config.num_attention_heads}}class a_ extends ad{}class au extends ad{}class ah extends E{constructor(e,s,t){super(e,s),this.generation_config=t,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_attention_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.config.num_attention_heads}}class am extends ah{}class ap extends ah{}class af extends E{}class ag extends af{}class aw extends af{static async from_pretrained(e,s={}){return s.model_file_name??="text_model",super.from_pretrained(e,s)}}class ax extends af{static async from_pretrained(e,s={}){return s.model_file_name??="audio_model",super.from_pretrained(e,s)}}class ay extends E{}class aM extends ay{async _call(e){return new iL(await super._call(e))}}class ak extends E{}class ab extends ak{}class av extends ak{}class aS extends E{constructor(e,s,t){super(e,s),this.generation_config=t,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_attention_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.num_heads}}class aF extends aS{}class aC extends E{}class aL extends aC{}class aA extends aC{async _call(e){return new iM(await super._call(e))}}class aP{static MODEL_CLASS_MAPPINGS=null;static BASE_IF_FAIL=!1;static async from_pretrained(e,{quantized:s=!0,progress_callback:t=null,config:a=null,cache_dir:i=null,local_files_only:o=!1,revision:r="main",model_file_name:l=null}={}){let c={quantized:s,progress_callback:t,config:a,cache_dir:i,local_files_only:o,revision:r,model_file_name:l};if(a=await n.z.from_pretrained(e,c),c.config||(c.config=a),!this.MODEL_CLASS_MAPPINGS)throw Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);for(let s of this.MODEL_CLASS_MAPPINGS){let t=s.get(a.model_type);if(t)return await t[1].from_pretrained(e,c)}if(this.BASE_IF_FAIL)return console.warn(`Unknown model class "${a.model_type}", attempting to construct from base class.`),await E.from_pretrained(e,c);throw Error(`Unsupported model type: ${a.model_type}`)}}let aE=new Map([["bert",["BertModel",B]],["nomic_bert",["NomicBertModel",V]],["roformer",["RoFormerModel",j]],["electra",["ElectraModel",ee]],["esm",["EsmModel",eP]],["convbert",["ConvBertModel",X]],["camembert",["CamembertModel",eo]],["deberta",["DebertaModel",eu]],["deberta-v2",["DebertaV2Model",ew]],["mpnet",["MPNetModel",eV]],["albert",["AlbertModel",eJ]],["distilbert",["DistilBertModel",ev]],["roberta",["RobertaModel",sf]],["xlm",["XLMModel",sk]],["xlm-roberta",["XLMRobertaModel",sL]],["clap",["ClapModel",ag]],["clip",["CLIPModel",sz]],["clipseg",["CLIPSegModel",sJ]],["chinese_clip",["ChineseCLIPModel",sK]],["siglip",["SiglipModel",sR]],["mobilebert",["MobileBertModel",eD]],["squeezebert",["SqueezeBertModel",eQ]],["wav2vec2",["Wav2Vec2Model",nG]],["wav2vec2-bert",["Wav2Vec2BertModel",nY]],["unispeech",["UniSpeechModel",nW]],["unispeech-sat",["UniSpeechSatModel",nX]],["hubert",["HubertModel",n1]],["wavlm",["WavLMModel",n5]],["audio-spectrogram-transformer",["ASTModel",sB]],["vits",["VitsModel",aM]],["detr",["DetrModel",tK]],["table-transformer",["TableTransformerModel",t0]],["vit",["ViTModel",tF]],["fastvit",["FastViTModel",tA]],["mobilevit",["MobileViTModel",tB]],["mobilevitv2",["MobileViTV2Model",tq]],["owlvit",["OwlViTModel",tV]],["owlv2",["Owlv2Model",t$]],["beit",["BeitModel",tQ]],["deit",["DeiTModel",t6]],["convnext",["ConvNextModel",ng]],["convnextv2",["ConvNextV2Model",ny]],["dinov2",["Dinov2Model",nb]],["resnet",["ResNetModel",t8]],["swin",["SwinModel",ns]],["swin2sr",["Swin2SRModel",na]],["donut-swin",["DonutSwinModel",np]],["yolos",["YolosModel",nF]],["dpt",["DPTModel",nr]],["glpn",["GLPNModel",nu]],["hifigan",["SpeechT5HifiGan",aa]],["efficientnet",["EfficientNetModel",aL]]]),aT=new Map([["t5",["T5Model",e1]],["longt5",["LongT5Model",e6]],["mt5",["MT5Model",e8]],["bart",["BartModel",ss]],["mbart",["MBartModel",si]],["marian",["MarianModel",nO]],["whisper",["WhisperModel",sq]],["m2m_100",["M2M100Model",nI]],["blenderbot",["BlenderbotModel",sd]],["blenderbot-small",["BlenderbotSmallModel",sh]]]),aO=new Map([["bloom",["BloomModel",tg]],["gpt2",["GPT2Model",s2]],["gptj",["GPTJModel",s9]],["gpt_bigcode",["GPTBigCodeModel",tt]],["gpt_neo",["GPTNeoModel",s3]],["gpt_neox",["GPTNeoXModel",s5]],["codegen",["CodeGenModel",ti]],["llama",["LlamaModel",tl]],["qwen2",["Qwen2Model",t_]],["phi",["PhiModel",tm]],["mpt",["MptModel",ty]],["opt",["OPTModel",tb]],["mistral",["MistralModel",al]],["starcoder2",["Starcoder2Model",a_]],["falcon",["FalconModel",am]]]),aB=new Map([["speecht5",["SpeechT5ForSpeechToText",at]],["whisper",["WhisperForConditionalGeneration",sN]]]),aD=new Map([["speecht5",["SpeechT5ForTextToSpeech",an]]]),aI=new Map([["vits",["VitsModel",aM]]]),aq=new Map([["bert",["BertForSequenceClassification",I]],["roformer",["RoFormerForSequenceClassification",W]],["electra",["ElectraForSequenceClassification",et]],["esm",["EsmForSequenceClassification",eT]],["convbert",["ConvBertForSequenceClassification",H]],["camembert",["CamembertForSequenceClassification",el]],["deberta",["DebertaForSequenceClassification",em]],["deberta-v2",["DebertaV2ForSequenceClassification",ey]],["mpnet",["MPNetForSequenceClassification",ej]],["albert",["AlbertForSequenceClassification",eZ]],["distilbert",["DistilBertForSequenceClassification",eS]],["roberta",["RobertaForSequenceClassification",sw]],["xlm",["XLMForSequenceClassification",sv]],["xlm-roberta",["XLMRobertaForSequenceClassification",sP]],["bart",["BartForSequenceClassification",sn]],["mbart",["MBartForSequenceClassification",sr]],["mobilebert",["MobileBertForSequenceClassification",eq]],["squeezebert",["SqueezeBertForSequenceClassification",eX]]]),aN=new Map([["bert",["BertForTokenClassification",q]],["roformer",["RoFormerForTokenClassification",R]],["electra",["ElectraForTokenClassification",en]],["esm",["EsmForTokenClassification",eO]],["convbert",["ConvBertForTokenClassification",J]],["camembert",["CamembertForTokenClassification",ec]],["deberta",["DebertaForTokenClassification",ep]],["deberta-v2",["DebertaV2ForTokenClassification",eM]],["mpnet",["MPNetForTokenClassification",e$]],["distilbert",["DistilBertForTokenClassification",eF]],["roberta",["RobertaForTokenClassification",sx]],["xlm",["XLMForTokenClassification",sS]],["xlm-roberta",["XLMRobertaForTokenClassification",sE]]]),aG=new Map([["t5",["T5ForConditionalGeneration",e3]],["longt5",["LongT5ForConditionalGeneration",e5]],["mt5",["MT5ForConditionalGeneration",e9]],["bart",["BartForConditionalGeneration",st]],["mbart",["MBartForConditionalGeneration",so]],["marian",["MarianMTModel",nB]],["m2m_100",["M2M100ForConditionalGeneration",nq]],["blenderbot",["BlenderbotForConditionalGeneration",s_]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",sm]]]),aV=new Map([["bloom",["BloomForCausalLM",tw]],["gpt2",["GPT2LMHeadModel",s0]],["gptj",["GPTJForCausalLM",te]],["gpt_bigcode",["GPTBigCodeForCausalLM",tn]],["gpt_neo",["GPTNeoForCausalLM",s4]],["gpt_neox",["GPTNeoXForCausalLM",s7]],["codegen",["CodeGenForCausalLM",to]],["llama",["LlamaForCausalLM",tc]],["qwen2",["Qwen2ForCausalLM",tu]],["phi",["PhiForCausalLM",tp]],["mpt",["MptForCausalLM",tM]],["opt",["OPTForCausalLM",tv]],["mbart",["MBartForCausalLM",sl]],["mistral",["MistralForCausalLM",ac]],["starcoder2",["Starcoder2ForCausalLM",au]],["falcon",["FalconForCausalLM",ap]],["trocr",["TrOCRForCausalLM",ao]],["stablelm",["StableLmForCausalLM",aF]]]),az=new Map([["bert",["BertForMaskedLM",D]],["roformer",["RoFormerForMaskedLM",$]],["electra",["ElectraForMaskedLM",es]],["esm",["EsmForMaskedLM",eE]],["convbert",["ConvBertForMaskedLM",K]],["camembert",["CamembertForMaskedLM",er]],["deberta",["DebertaForMaskedLM",eh]],["deberta-v2",["DebertaV2ForMaskedLM",ex]],["mpnet",["MPNetForMaskedLM",ez]],["albert",["AlbertForMaskedLM",e2]],["distilbert",["DistilBertForMaskedLM",eL]],["roberta",["RobertaForMaskedLM",sg]],["xlm",["XLMWithLMHeadModel",sb]],["xlm-roberta",["XLMRobertaForMaskedLM",sA]],["mobilebert",["MobileBertForMaskedLM",eI]],["squeezebert",["SqueezeBertForMaskedLM",eU]]]),aj=new Map([["bert",["BertForQuestionAnswering",N]],["roformer",["RoFormerForQuestionAnswering",Q]],["electra",["ElectraForQuestionAnswering",ea]],["convbert",["ConvBertForQuestionAnswering",Z]],["camembert",["CamembertForQuestionAnswering",ed]],["deberta",["DebertaForQuestionAnswering",ef]],["deberta-v2",["DebertaV2ForQuestionAnswering",ek]],["mpnet",["MPNetForQuestionAnswering",eW]],["albert",["AlbertForQuestionAnswering",eY]],["distilbert",["DistilBertForQuestionAnswering",eC]],["roberta",["RobertaForQuestionAnswering",sy]],["xlm",["XLMForQuestionAnswering",sF]],["xlm-roberta",["XLMRobertaForQuestionAnswering",sT]],["mobilebert",["MobileBertForQuestionAnswering",eN]],["squeezebert",["SqueezeBertForQuestionAnswering",eK]]]),a$=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",sG]]]),aW=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",sG]]]),aR=new Map([["vit",["ViTForImageClassification",tC]],["fastvit",["FastViTForImageClassification",tP]],["mobilevit",["MobileViTForImageClassification",tD]],["mobilevitv2",["MobileViTV2ForImageClassification",tN]],["beit",["BeitForImageClassification",tU]],["deit",["DeiTForImageClassification",t5]],["convnext",["ConvNextForImageClassification",nw]],["convnextv2",["ConvNextV2ForImageClassification",nM]],["dinov2",["Dinov2ForImageClassification",nv]],["resnet",["ResNetForImageClassification",t9]],["swin",["SwinForImageClassification",nt]],["segformer",["SegformerForImageClassification",ab]],["efficientnet",["EfficientNetForImageClassification",aA]]]),aQ=new Map([["detr",["DetrForObjectDetection",tH]],["table-transformer",["TableTransformerForObjectDetection",t1]],["yolos",["YolosForObjectDetection",nC]]]),aU=new Map([["owlvit",["OwlViTForObjectDetection",tz]],["owlv2",["Owlv2ForObjectDetection",tW]]]),aX=new Map([["detr",["DetrForSegmentation",tJ]],["clipseg",["CLIPSegForImageSegmentation",sZ]]]),aK=new Map([["segformer",["SegformerForSemanticSegmentation",av]]]),aH=new Map([["sam",["SamModel",nP]]]),aJ=new Map([["wav2vec2",["Wav2Vec2ForCTC",nV]],["wav2vec2-bert",["Wav2Vec2BertForCTC",n2]],["unispeech",["UniSpeechForCTC",nR]],["unispeech-sat",["UniSpeechSatForCTC",nK]],["wavlm",["WavLMForCTC",n7]],["hubert",["HubertForCTC",n3]]]),aZ=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",nz]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",n0]],["unispeech",["UniSpeechForSequenceClassification",nQ]],["unispeech-sat",["UniSpeechSatForSequenceClassification",nH]],["wavlm",["WavLMForSequenceClassification",n8]],["hubert",["HubertForSequenceClassification",n4]],["audio-spectrogram-transformer",["ASTForAudioClassification",sD]]]),aY=new Map([["wavlm",["WavLMForXVector",n9]]]),a2=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",nJ]],["wavlm",["WavLMForAudioFrameClassification",ae]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",nj]]]),a0=new Map([["vitmatte",["VitMatteForImageMatting",tT]]]),a1=new Map([["swin2sr",["Swin2SRForImageSuperResolution",ni]]]),a3=new Map([["dpt",["DPTForDepthEstimation",nl]],["depth_anything",["DepthAnythingForDepthEstimation",nd]],["glpn",["GLPNForDepthEstimation",nh]]]),a4=new Map([["clip",["CLIPVisionModelWithProjection",s$]],["siglip",["SiglipVisionModel",sU]]]),a6=[[aE,h.EncoderOnly],[aT,h.EncoderDecoder],[aO,h.DecoderOnly],[aq,h.EncoderOnly],[aN,h.EncoderOnly],[aG,h.Seq2Seq],[aB,h.Seq2Seq],[aV,h.DecoderOnly],[az,h.EncoderOnly],[aj,h.EncoderOnly],[a$,h.Vision2Seq],[aR,h.EncoderOnly],[aX,h.EncoderOnly],[aK,h.EncoderOnly],[a0,h.EncoderOnly],[a1,h.EncoderOnly],[a3,h.EncoderOnly],[aQ,h.EncoderOnly],[aU,h.EncoderOnly],[aH,h.MaskGeneration],[aJ,h.EncoderOnly],[aZ,h.EncoderOnly],[aD,h.Seq2Seq],[aI,h.EncoderOnly],[aY,h.EncoderOnly],[a2,h.EncoderOnly],[a4,h.EncoderOnly]];for(let[e,s]of a6)for(let[t,n]of e.values())m.set(t,s),f.set(n,t),p.set(t,n);for(let[e,s,t]of[["CLIPTextModelWithProjection",sj,h.EncoderOnly],["SiglipTextModel",sQ,h.EncoderOnly],["ClapTextModelWithProjection",aw,h.EncoderOnly],["ClapAudioModelWithProjection",ax,h.EncoderOnly]])m.set(e,t),f.set(s,e),p.set(e,s);class a5 extends aP{static MODEL_CLASS_MAPPINGS=a6.map(e=>e[0]);static BASE_IF_FAIL=!0}class a7 extends aP{static MODEL_CLASS_MAPPINGS=[aq]}class a8 extends aP{static MODEL_CLASS_MAPPINGS=[aN]}class a9 extends aP{static MODEL_CLASS_MAPPINGS=[aG]}class ie extends aP{static MODEL_CLASS_MAPPINGS=[aB]}class is extends aP{static MODEL_CLASS_MAPPINGS=[aD]}class it extends aP{static MODEL_CLASS_MAPPINGS=[aI]}class ia extends aP{static MODEL_CLASS_MAPPINGS=[aV]}class ii extends aP{static MODEL_CLASS_MAPPINGS=[az]}class io extends aP{static MODEL_CLASS_MAPPINGS=[aj]}class ir extends aP{static MODEL_CLASS_MAPPINGS=[a$]}class il extends aP{static MODEL_CLASS_MAPPINGS=[aR]}class ic extends aP{static MODEL_CLASS_MAPPINGS=[aX]}class id extends aP{static MODEL_CLASS_MAPPINGS=[aK]}class i_ extends aP{static MODEL_CLASS_MAPPINGS=[aQ]}class iu extends aP{static MODEL_CLASS_MAPPINGS=[aU]}class ih extends aP{static MODEL_CLASS_MAPPINGS=[aJ]}class im extends aP{static MODEL_CLASS_MAPPINGS=[aZ]}class ip extends aP{static MODEL_CLASS_MAPPINGS=[aW]}class ig extends aP{static MODEL_CLASS_MAPPINGS=[a1]}class iw extends aP{static MODEL_CLASS_MAPPINGS=[a3]}class ix extends aP{static MODEL_CLASS_MAPPINGS=[a4]}class iy extends T{constructor({logits:e,past_key_values:s,encoder_outputs:t,decoder_attentions:n=null,cross_attentions:a=null}){super(),this.logits=e,this.past_key_values=s,this.encoder_outputs=t,this.decoder_attentions=n,this.cross_attentions=a}}class iM extends T{constructor({logits:e}){super(),this.logits=e}}class ik extends T{constructor({logits:e,embeddings:s}){super(),this.logits=e,this.embeddings=s}}class ib extends T{constructor({logits:e}){super(),this.logits=e}}class iv extends T{constructor({logits:e}){super(),this.logits=e}}class iS extends T{constructor({start_logits:e,end_logits:s}){super(),this.start_logits=e,this.end_logits=s}}class iF extends T{constructor({logits:e}){super(),this.logits=e}}class iC extends T{constructor({alphas:e}){super(),this.alphas=e}}class iL extends T{constructor({waveform:e,spectrogram:s}){super(),this.waveform=e,this.spectrogram=s}}}}]);